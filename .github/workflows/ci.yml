name: CI/CD Pipeline
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          # Secrets (sensitive)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MILVUS_URI: ${{ secrets.MILVUS_URI }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

          # Variables (non-sensitive)
          ENABLE_RERANKING: ${{ vars.ENABLE_RERANKING }}
          FDA_WARNING_LETTERS_COLLECTION: ${{ vars.FDA_WARNING_LETTERS_COLLECTION }}
          INITIAL_SEARCH_MULTIPLIER: ${{ vars.INITIAL_SEARCH_MULTIPLIER }}
          MAX_CONVERSATION_HISTORY: ${{ vars.MAX_CONVERSATION_HISTORY }}
          MAX_MESSAGE_LENGTH: ${{ vars.MAX_MESSAGE_LENGTH }}
          RATE_LIMIT_REQUESTS: ${{ vars.RATE_LIMIT_REQUESTS }}
          RATE_LIMIT_WINDOW: ${{ vars.RATE_LIMIT_WINDOW }}
          RERANKING_MODEL: ${{ vars.RERANKING_MODEL }}
          RSS_FEEDS_COLLECTION: ${{ vars.RSS_FEEDS_COLLECTION }}
        run: |
          echo "ðŸ”§ Environment variables loaded:"
          echo "   OPENAI_API_KEY: âœ… Set"
          echo "   MILVUS_URI: âœ… Set"
          echo "   SUPABASE_SERVICE_KEY: âœ… Set"
          echo "   SUPABASE_URL: âœ… Set"
          echo "   ENABLE_RERANKING: ${{ vars.ENABLE_RERANKING }}"
          echo "   MAX_MESSAGE_LENGTH: ${{ vars.MAX_MESSAGE_LENGTH }}"
          echo "   RATE_LIMIT_REQUESTS: ${{ vars.RATE_LIMIT_REQUESTS }}"
          echo "   RATE_LIMIT_WINDOW: ${{ vars.RATE_LIMIT_WINDOW }}"

          python test_rag.py

      - name: Test validation endpoints
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MILVUS_URI: ${{ secrets.MILVUS_URI }}
          MAX_MESSAGE_LENGTH: ${{ vars.MAX_MESSAGE_LENGTH }}
          RATE_LIMIT_REQUESTS: ${{ vars.RATE_LIMIT_REQUESTS }}
          RATE_LIMIT_WINDOW: ${{ vars.RATE_LIMIT_WINDOW }}
        run: |
          echo "ðŸ§ª Testing validation endpoints..."
          # Start the server in background
          python index.py &
          SERVER_PID=$!

          # Wait for server to start
          sleep 10

          # Test validation status endpoint
          curl -s http://localhost:8000/api/validation/status | python -m json.tool

          # Kill the server
          kill $SERVER_PID
